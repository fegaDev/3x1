<div>
    <section>
       
        <div class="container">
            <div data-cell-index="0" class="cell"></div>
            <div data-cell-index="1" class="cell"></div>
            <div data-cell-index="2" class="cell"></div>
            <div data-cell-index="3" class="cell"></div>
            <div data-cell-index="4" class="cell"></div>
            <div data-cell-index="5" class="cell"></div>
            <div data-cell-index="6" class="cell"></div>
            <div data-cell-index="7" class="cell"></div>
            <div data-cell-index="8" class="cell"></div>
        </div>
        <h2 class="puntaje"></h2>
        <button class="restart">Restart Game</button>
    </section>
</div>
<style>
section {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.container {
    display: grid;
    grid-template-columns: repeat(3, auto);
    width: 306px;
    margin: 30px auto;
    
}

.cell {
    width: 100px;
    height: 100px;
    cursor: pointer;
    line-height: 100px;
    font-size: 60px;
    background-color: white;
    border-radius: 18px;
    margin: 10px ;
    box-shadow: 10px 10px 5px  black;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    transition: transform 0.2s ease-in-out;
}
.cell:hover{
    transform: translate(0.05em,0.05em);
}
h1{
    margin: 27px auto 0 auto;
    padding-left: 100px;
}
h2{
    margin: 0;
    padding-left: 50px;
}
.restart{
    background-color: transparent;
    margin-left: 50px;
    margin-top: 10px;
    border: 1px solid black;
    box-shadow: 4px 2px 5px 1px black;
    width: 120px;
    height: 50px;
    border-radius: 18px;
    font-size: 15px;
    font-weight: 700;
    cursor:pointer;
    transition: transform 0.2s ease-in-out;
}
.restart:hover{
    transform: translate(0.2em,0.2em);
}
</style>

<script>

const statusDisplay = document.querySelector('.puntaje');
let gameActive = true;
let jugadorActual = "X";
let gameState = ["", "", "", "", "", "", "", "", ""];

const winningMessage = () => `Jugador ${jugadorActual} GanÃ³!`;
const drawMessage = () => `Empate`;
const jugadorActualTurn = () => `Turno  ${jugadorActual}`;

statusDisplay.innerHTML = jugadorActualTurn();

const condicionAlgoritmo = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6]
];

function handleCellPlayed(clickedCell, clickedCellIndex) {
    gameState[clickedCellIndex] = jugadorActual;
    clickedCell.innerHTML = jugadorActual;
}

function handlePlayerChange() {
    jugadorActual = jugadorActual === "X" ? "O" : "X";
    statusDisplay.innerHTML = jugadorActualTurn();
}

function handleResultValidation() {
    let verificarGanador = false;
    for (let i = 0; i <= 7; i++) {
        const winCondition = condicionAlgoritmo[i];
        let a = gameState[winCondition[0]];
        let b = gameState[winCondition[1]];
        let c = gameState[winCondition[2]];
        if (a === '' || b === '' || c === '') {
            continue;
        }
        if (a === b && b === c) {
            verificarGanador = true;
            break
        }
    }

    if (verificarGanador) {
        statusDisplay.innerHTML = winningMessage();
        gameActive = false;
        return;
    }

    let verificarEmpate = !gameState.includes("");
    if (verificarEmpate) {
        statusDisplay.innerHTML = drawMessage();
        gameActive = false;
        return;
    }

    handlePlayerChange();
}

function handleCellClick(clickedCellEvent) {
    const clickedCell = clickedCellEvent.target;
    const clickedCellIndex = parseInt(clickedCell.getAttribute('data-cell-index'));

    if (gameState[clickedCellIndex] !== "" || !gameActive) {
        return;
    }

    handleCellPlayed(clickedCell, clickedCellIndex);
    handleResultValidation();
}

function handleRestartGame() {
    gameActive = true;
    jugadorActual = "X";
    gameState = ["", "", "", "", "", "", "", "", ""];
    statusDisplay.innerHTML = jugadorActualTurn();
    document.querySelectorAll('.cell').forEach(cell => cell.innerHTML = "");
}

document.querySelectorAll('.cell').forEach(cell => cell.addEventListener('click', handleCellClick));
document.querySelector('.restart').addEventListener('click', handleRestartGame);
</script>